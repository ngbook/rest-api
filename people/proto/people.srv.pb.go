// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ngbook/people/proto/people.srv.proto

/*
Package people_srv is a generated protocol buffer package.

It is generated from these files:
	ngbook/people/proto/people.srv.proto

It has these top-level messages:
	People
	GetListReq
	GetListRsp
*/
package people_srv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type People struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	Age      int64  `protobuf:"varint,4,opt,name=age" json:"age,omitempty"`
	Tel      string `protobuf:"bytes,5,opt,name=tel" json:"tel,omitempty"`
	Avatar   string `protobuf:"bytes,6,opt,name=avatar" json:"avatar,omitempty"`
	Friends  string `protobuf:"bytes,7,opt,name=friends" json:"friends,omitempty"`
	Face     string `protobuf:"bytes,8,opt,name=face" json:"face,omitempty"`
}

func (m *People) Reset()                    { *m = People{} }
func (m *People) String() string            { return proto.CompactTextString(m) }
func (*People) ProtoMessage()               {}
func (*People) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *People) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *People) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *People) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *People) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *People) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *People) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *People) GetFriends() string {
	if m != nil {
		return m.Friends
	}
	return ""
}

func (m *People) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

type GetListReq struct {
	Start    int64 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
}

func (m *GetListReq) Reset()                    { *m = GetListReq{} }
func (m *GetListReq) String() string            { return proto.CompactTextString(m) }
func (*GetListReq) ProtoMessage()               {}
func (*GetListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetListReq) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetListReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetListRsp struct {
	People []*People `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *GetListRsp) Reset()                    { *m = GetListRsp{} }
func (m *GetListRsp) String() string            { return proto.CompactTextString(m) }
func (*GetListRsp) ProtoMessage()               {}
func (*GetListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetListRsp) GetPeople() []*People {
	if m != nil {
		return m.People
	}
	return nil
}

func init() {
	proto.RegisterType((*People)(nil), "People")
	proto.RegisterType((*GetListReq)(nil), "GetListReq")
	proto.RegisterType((*GetListRsp)(nil), "GetListRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PeopleService service

type PeopleServiceClient interface {
	GetList(ctx context.Context, in *GetListReq, opts ...client.CallOption) (*GetListRsp, error)
}

type peopleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPeopleServiceClient(serviceName string, c client.Client) PeopleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "peopleservice"
	}
	return &peopleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *peopleServiceClient) GetList(ctx context.Context, in *GetListReq, opts ...client.CallOption) (*GetListRsp, error) {
	req := c.c.NewRequest(c.serviceName, "PeopleService.GetList", in)
	out := new(GetListRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PeopleService service

type PeopleServiceHandler interface {
	GetList(context.Context, *GetListReq, *GetListRsp) error
}

func RegisterPeopleServiceHandler(s server.Server, hdlr PeopleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PeopleService{hdlr}, opts...))
}

type PeopleService struct {
	PeopleServiceHandler
}

func (h *PeopleService) GetList(ctx context.Context, in *GetListReq, out *GetListRsp) error {
	return h.PeopleServiceHandler.GetList(ctx, in, out)
}

func init() { proto.RegisterFile("ngbook/people/proto/people.srv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0xd2, 0x26, 0x75, 0x8a, 0x22, 0x83, 0xc8, 0xd2, 0x8b, 0x21, 0x28, 0xe4, 0x62,
	0x0a, 0x15, 0x3c, 0x7a, 0xf5, 0xe2, 0x41, 0xd2, 0x27, 0xd8, 0x26, 0xd3, 0xb0, 0xb4, 0x26, 0xeb,
	0xee, 0x9a, 0x83, 0x8f, 0xe6, 0xd3, 0x95, 0xcc, 0xa6, 0xcd, 0x6d, 0xbe, 0xef, 0xdf, 0x59, 0x66,
	0x06, 0x9e, 0xda, 0x66, 0xd7, 0x75, 0x87, 0xb5, 0xa6, 0x4e, 0x1f, 0x69, 0xad, 0x4d, 0xe7, 0xba,
	0x11, 0x0a, 0x6b, 0xfa, 0x82, 0x45, 0xf6, 0x1f, 0x40, 0xfc, 0xc5, 0x12, 0x6f, 0x21, 0x54, 0xb5,
	0x08, 0xd2, 0x20, 0x8f, 0xca, 0x50, 0xd5, 0xb8, 0x82, 0xc5, 0xaf, 0x25, 0xd3, 0xca, 0x6f, 0x12,
	0x61, 0x1a, 0xe4, 0xd7, 0xe5, 0x85, 0x87, 0xac, 0x55, 0xd5, 0x81, 0xb3, 0xc8, 0x67, 0x67, 0xc6,
	0x3b, 0x88, 0x64, 0x43, 0x62, 0xc6, 0x1f, 0x0d, 0xe5, 0x60, 0x1c, 0x1d, 0xc5, 0x9c, 0x1f, 0x0e,
	0x25, 0x3e, 0x40, 0x2c, 0x7b, 0xe9, 0xa4, 0x11, 0x31, 0xcb, 0x91, 0x50, 0x40, 0xb2, 0x37, 0x8a,
	0xda, 0xda, 0x8a, 0x84, 0x83, 0x33, 0x22, 0xc2, 0x6c, 0x2f, 0x2b, 0x12, 0x0b, 0xd6, 0x5c, 0x67,
	0xef, 0x00, 0x1f, 0xe4, 0x3e, 0x95, 0x75, 0x25, 0xfd, 0xe0, 0x3d, 0xcc, 0xad, 0x93, 0xc6, 0x8d,
	0x2b, 0x78, 0x18, 0x26, 0xd5, 0xb2, 0xa1, 0xad, 0xfa, 0xf3, 0x5b, 0x44, 0xe5, 0x85, 0xb3, 0x97,
	0xa9, 0xdf, 0x6a, 0x7c, 0x84, 0xd8, 0x9f, 0x47, 0x04, 0x69, 0x94, 0x2f, 0x37, 0x49, 0xe1, 0x0f,
	0x53, 0x8e, 0x7a, 0xf3, 0x06, 0x37, 0xde, 0x6c, 0xc9, 0xf4, 0xaa, 0x22, 0x7c, 0x86, 0x64, 0xec,
	0xc7, 0x65, 0x31, 0x4d, 0xb2, 0x9a, 0xc0, 0xea, 0xec, 0x6a, 0x17, 0xf3, 0xa9, 0x5f, 0x4f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x42, 0xb5, 0xfc, 0xbb, 0x92, 0x01, 0x00, 0x00,
}
